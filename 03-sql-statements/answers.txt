1. List the commands for adding, updating, and deleting data

INSERT INTO
UPDATE
DELETE

2. Explain the structure for each type of command.

INSERT INTO <table name> VALUES <values>;
Specify the table you want to insert into, followed by the values you want to insert.

UDPATE <table name> SET <column name> WHERE <filters>;
Specify the table you want to perform an update on, then specify the column you
want to update followed by any filters (optional), specifying which records you
want to update.

DELETE FROM <table name> WHERE <filters>;
Specify which table you want to delete from, followed by filters declaring Which
records you want to delete.

3. What are some the data types that can be used in tables? Give a real world example of each.

money => used when we need to track currency units. Example, bank account balance.

varchar => when we need to hold a string of indeterminate length. Example, name.

date => used when we need to store a date. Example, date of birth.

4. Think through how to create a new table to hold a list of people invited to a wedding.
This table needs to have first and last name, whether they sent in their RSVP,
the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).


5. Which data type would you use to store each of the following pieces of information?
First and last name.

varchar

Whether they sent in their RSVP.

boolean

Number of guests.

integer

Number of meals.

numeric

Write a command that makes the table to track the wedding.

  CREATE TABLE wedding (
    first_name varchar(20),
    last_name varchar(20),
    sent_rsvp boolean,
    number_of_guests integer,
    number_of_meals numberic(2, 1)
  );

Using the table we just created, write a command that adds a column to track whether they were sent a thank you card.

  ALTER TABLE wedding ADD COLUMN sent_thankyou boolean DEFAULT false;

You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.

  ALTER TABLE wedding DROP COLUMN number_of_meals;

The guests are going to need a place to sit at the reception, so write a statement that adds a column for table number.

  ALTER TABLE wedding ADD COLUMN table_number integer;

The wedding is over and we do not need to keep this information, so write a command that deletes the wedding table from the database.

  DROP TABLE wedding;

6. Write a command to make a new table to hold the books in a library with the
columns ISBN, title, author, genre, publishing date, number of copies, and available copies.

  CREATE TABLE books (
    isbn integer primary key,
    title varchar(100),
    author varchar(50),
    genre varchar(20),
    publishing_date date,
    number_of_copies integer,
    available_copies integer
  );

Find three books and add their information to the table.

  INSERT INTO books (isbn, title, author, genre, publishing_date, number_of_copies, available_copies)
  VALUES
  (0262033844, "Introduction to Algorithms", "Thomas H. Cormen", "Education", 07/31/09, 10, 10),
  (0131103628, "C Programming Language (2nd Edition)", "Brian W. Kernighan", "Education", 03/22/88, 10, 10),
  (0471168947, "UNIX Shell Programming", "Lowell Jay Arthur", "Education", 07/25/1997), 10, 10);

Say that someone has just checked out one of the books. Change the available copies column to 1 less.

  UPDATE books SET available_copies=9 WHERE isbn=0262033844;

Now one of the books has been added to the banned books list. Remove it from the table.

  DELETE FROM books WHERE isbn=0471168947;

7. Write a command to make a new table to hold spacecrafts. Information should include
id, name, year launched, country of origin, a brief description of the mission,
orbiting body, if it is currently operating, and approximate miles from Earth.

  CREATE TABLE spacecrafts (
    id integer primary key,
    name varchar(50),
    year_launched integer,
    country_of_origin varchar(50),
    description varchar(250),
    orbiting_body varchar(50),
    operating boolean,
    miles_from_earth integer
  );

Add 3 non-Earth-orbiting satellites to the table.

  INSERT INTO spacecrafts (id, name, year_launched, country_of_origin, description, orbiting_body, operating, miles_from_earth)
  VALUES
  (1, "Kepler", 2009, "United States", "space observatory searching for earth like planets", "Sun", true, 75_000_000),
  (2, "Gaia", 2013, "ESA", "Space observatory designed for astrometry", "Sun-Earth", true, 900_000),
  (3, "Luna 10", 1966, "Soviet Union", "The first satellite to orbit the moon", "Moon", false, 240_000);

Remove one of the satellites from the table since it has just been crashed into the planet.

  DELETE FROM spacecrafts WHERE id=3;

Edit another satellite because it is no longer operating and change the value to reflect that.

  UPDATE spacecrafts SET operating=false WHERE id=1;

9. Write a command to make a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not it’s been read, and the id of the email chain it’s in.

  CREATE TABLE emails (
    id integer primary key,
    subject varchar(100),
    sender varchar(50),
    additional_recipients varchar(50),
    body varchar(500),
    timestamp timestamp,
    read boolean,
    email_chain_id integer
  );

Add 3 new emails to the inbox.

  INSERT INTO emails (id, subject, sender, additional_recipients, body, timestamp, read, email_chain_id)
  VALUES
  (1, "Hello there", "bob@example.com", null, "Hi there, I would like to introduce myself as bob.", '2004-10-19 10:23:54', true, 12),
  (2, "Black Friday Sale", "offers@amazon.com", null, "Here are the Black Friday Deals at Amazon", '2005-10-19 10:23:54' false, 2),
  (3, "REQUEST FOR ASSISTANCE", "nigerian-prince@gmail.com", "money-transfer@western-union.com", "I am Dr. Bakare Tunde, the cousin of Nigerian Astronaut, Air Force Major Abacha Tunde. He was the first African in space when he made a secret flight to the Salyut 6 space station in 1979." '2005-10-19 10:23:54' false, 23);


You’ve just deleted one of the emails, so write a command to remove the row from the inbox table.

  DELETE FROM emails WHERE id=3;

You started reading an email but just heard a crash in another room. Mark the email as unread before investigating, so you can come back to it later.

  UPDATE emails SET read=false WHERE id=2;
